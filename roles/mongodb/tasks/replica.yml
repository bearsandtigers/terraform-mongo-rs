---
- name: Add replica settings
  blockinfile:
    path: /etc/mongodb.conf
    block: |
      replication.oplogSizeMB: "{{ mongodb_replication_oplogsize }}"
      replication.replSetName:  "{{ mongodb_replication_replset }}"
      replication.secondaryIndexPrefetch: "{{ mongodb_replication_replindexprefetch }}"
  notify:
    - restart mongo
- shell: cat /etc/mongodb.conf
  register: conf
- debug: msg="{{ conf }}"
- name: Restart Mongo
  service:
    name: mongodb
    state: restarted 
- wait_for:
    host: 127.0.0.1
    port: 27017
- name: Get status
  shell: | 
    mongo  --ssl --sslAllowInvalidCertificates \
    --authenticationDatabase "admin"  \
    -u "{{ mongodb_user_admin_name }}" \
    -p "{{ mongodb_user_admin_password }}" \
    --eval 'rs.status()'
  register: rs_status
  when: "'mongo_master' in group_names"
- debug: msg="{{ rs_status.stdout }}"
  when:  "'mongo_master' in group_names"
- name: Initialize replicaSet
  shell: |
    mongo  --ssl --sslAllowInvalidCertificates \
    --authenticationDatabase "admin"  \
    -u "{{ mongodb_user_admin_name }}" \
    -p "{{ mongodb_user_admin_password }}" \
    --eval 'rs.initiate({
    _id : "{{ mongodb_replication_replset }}",
    members: [
      { _id: 0, host: "{{ hostvars[groups['mongo'][0]].ansible_eth0.ipv4.address }}:27017" },
      { _id: 1, host: "{{ hostvars[groups['mongo'][1]].ansible_eth0.ipv4.address }}:27017" },
      { _id: 2, host: "{{ hostvars[groups['mongo'][2]].ansible_eth0.ipv4.address }}:27017" }
    ]
    })'
  register: rs_initiate
  when: 
    - "'mongo_master' in group_names"
    - ( '"NoReplicationEnabled" in rs_status.stdout' or '"NotYetInitialized" in rs_status.stdout' )
- debug: msg="{{ rs_initiate.stdout }}"
  when:  "'mongo_master' in group_names"
    

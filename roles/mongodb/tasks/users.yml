---
- name: Ensure pymongo is present
  pip:
    name: pymongo

- name: Disable auth
  lineinfile:
    path: /etc/mongodb.conf
    regexp: 'security.authorization:'
    line: 'security.authorization: disabled'
- replace:
    path: /etc/mongodb.conf
    regexp: '(security.keyFile:.*)$'
    replace: '# \1'
- replace:
    path: /etc/mongodb.conf
    regexp: '(replication.replSetName:.*)$'
    replace: '# \1'

- service:
    name: mongodb
    state: restarted
- wait_for:
    host: 127.0.0.1
    port: 27017
- name: Add default admin
  shell: |
    mongo  --ssl --sslAllowInvalidCertificates \
    --authenticationDatabase "admin" \
    admin \
    --eval 'db.createUser( 
    { 
    user: "{{ mongodb_user_admin_name }}", 
    pwd: "{{ mongodb_user_admin_password }}", 
    roles: [ { role: "root", db: "admin" },
             { role: "userAdminAnyDatabase", db: "admin"},
             { role: "readWriteAnyDatabase", db: "admin"}, ]
    }
    )'
  ignore_errors: yes
  
- name: Enable auth
  lineinfile:
    path: /etc/mongodb.conf
    regexp: 'security.authorization:'
    line: 'security.authorization: enabled'
- replace:
    path: /etc/mongodb.conf
    regexp: '.*(security.keyFile:.*)'
    replace: '\1'
- replace:
    path: /etc/mongodb.conf
    regexp: '(replication.replSetName:.*)$'
    replace: '\1'
- service:
    name: mongodb
    state: restarted
- wait_for:
    host: 127.0.0.1
    port: 27017

- name: Add Mongo users
  mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    roles: "{{ item.roles }}"
    state: present
    ssl: true
    ssl_cert_reqs: CERT_NONE
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_database: "admin"
  loop: "{{ mongodb_users }}"
